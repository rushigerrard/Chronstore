---
- name: Creating Directory for Docker
  file: 
    path: "{{home_path}}/DockerImage" 
    state: directory

- name: Creating Log server directory
  file:
    path: "{{home_path}}/log_server"
    state: directory

- name: Add Env variable for shell scripts
  lineinfile:
    dest: "{{home_path}}/.bashrc"
    line: 'export PATH=$PATH:{{home_path}}/DockerImage/keyvalue/Resources/docker_scripts'

- name: Cloning repository
  git:
    repo: "https://{{UNITY_ID}}:{{GIT_TOKEN}}@{{git_repo}}"
    dest: "{{home_path}}/DockerImage/keyvalue"
    version: "{{GIT_BRANCH}}"
    force: yes
  register: git_clone

- name: Adding Remote logging Url in Chord log4j.properties
  replace:
    dest: "{{home_path}}/DockerImage/keyvalue/Chord/src/main/resources/log4j.properties"
    regexp: "loghost"
    replace: "{{IP_ADDR}}"

- name: Adding Remote logging Url in Client log4j.properties
  replace:
    dest: "{{home_path}}/DockerImage/keyvalue/Client/src/main/resources/log4j.properties"
    regexp: "loghost"
    replace: "{{IP_ADDR}}"

- name: Adding Remote logging Url in KeyStore log4j.properties
  replace:
    dest: "{{home_path}}/DockerImage/keyvalue/ObjectStore/src/main/resources/log4j.properties"
    regexp: "loghost"
    replace: "{{IP_ADDR}}"

- name: Copy Docker DockerFile
  template:
    force: yes
    src: "templates/Dockerfile.j2"
    dest: "{{home_path}}/DockerImage/Dockerfile" 
    mode: 0700

- name: Check If DockerImage Exists
  shell: docker images 
  register: docker_images

- name: "Build Docker DockerImage"
  shell: docker build -t keyvalue . 
  args:
   chdir: "{{home_path}}/DockerImage/"
  when: "docker_images.stdout.find('keyvalue') == -1"